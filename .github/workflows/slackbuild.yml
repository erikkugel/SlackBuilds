# Trigger ;-)

on:
  push:
    paths:
      - .github/workflows/slackbuild.yml
      - .github/actions/slackbuild/action.yml
      - '**/*.SlackBuild'
      - '**/slack-desc'
      - '**/doinst.sh'
        #  branches:
        # - master
  workflow_dispatch:
    inputs:
      target:
        description: 'One or more SlackBuilds to execute, comma-delimited'
        required: true
        type: string

jobs:
  slackbuild:
    runs-on: [ubuntu-latest]
    steps:
      - id: checkout
        name: Checkout SlackBuilds
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
          fetch-depth: 2

      - id: targets
        name: Targets
        shell: bash
        run: |
          set -x
          if [ "${GITHUB_EVENT}" == 'workflow_dispatch' ]; then
            TARGETS=${{ inputs.target }}
          else
            #GIT_DIFF="$(git diff --diff-filter=AM --name-only HEAD^ | grep -P '\.SlackBuild$|^slack-desc$|dependencies.txt')"
            #GIT_DIFF=''
            git diff --diff-filter=AM --name-only HEAD^ > ./diff.txt
            GIT_DIFF="$(grep -E '\.SlackBuild|\/slack-desc$|\/dependencies.txt' ./diff.txt)"
            TARGETS=$(echo "${GIT_DIFF}" | tr ' ' ',')
          fi
          echo -e "Targets:\n${TARGETS}"
          echo "::set-output name=targets::${TARGETS}"

      - id: build
        name: Build
        if: ${{ steps.targets.outputs.targets != '' }}
        uses: ./.github/actions/build
        with:
          targets: ${{ steps.targets.outputs.targets }}


#      - id: ghcr_login
#        name: GitHub Container Registry Login
#        uses: docker/login-action@v2
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GITHUB_TOKEN }}
#
#      - id: docker_pull
#        name: Docker Pull
#        run: |
#          docker pull ghcr.io/erikkugel/slackbuild:0.0.1
#          mkdir -v packages
#      
#      - id: slackbuild_alttab
#        name: SlackBuild alttab
#        uses: ./.github/actions/slackbuild
#        with:
#          target: ${{ steps.targets.outputs.targets }}
#
#      - id: upload_artifact
#        name: Upload Artifact
#        uses: actions/upload-artifact@v3
#        with:
#          name: packages
#          path: ./packages/*.txz
