#!/bin/bash
#
# Ernest Kugel, 2022

PRGNAM='hostapd'
VERSION='2.11'
APP_URL="https://w1.fi/releases/${PRGNAM}-${VERSION}.tar.gz"
BUILD_DIR="/tmp/SlackBuild-${PRGNAM}-$(date +%s)"
TAG='1_x'

set -e

if [ "$(getconf LONG_BIT)" == '64' ]; then
	LIBDIRSUFFIX='64'
	export CFLAGS='-fPIC'
	export CPPFLAGS='-fPIC'
else
	LIBDIRSUFFIX=''
fi

# Download
mkdir -v -p ${BUILD_DIR}/install ${BUILD_DIR}/etc/rc.d ${BUILD_DIR}/src
if ! [ -f ${PRGNAM}-${VERSION}.tar.gz ]; then
	wget ${APP_URL}
fi
tar -v -x -z -C ${BUILD_DIR}/src -f ./${PRGNAM}-${VERSION}.tar.gz
cp -v -f ./slack-desc ${BUILD_DIR}/install/slack-desc
cp -v -f ./doinst.sh ${BUILD_DIR}/install/doinst.sh
cp -v -f ./rc.hostapd ${BUILD_DIR}/etc/rc.d/rc.hostapd

# Build
cd ${BUILD_DIR}/src/${PRGNAM}-${VERSION}/hostapd

cat defconfig > .config
sed -i 's/^#CONFIG_IEEE80211N=[ny]/CONFIG_IEEE80211N=y/' .config
sed -i 's/^#CONFIG_ACS=[ny]/CONFIG_ACS=y/' .config

make install DESTDIR=${BUILD_DIR} -j$(grep -Pc 'processor\t:[0-9]*' /proc/cpuinfo)
mkdir -v -p ${BUIDL_DIR}/usr/local/bin ${BUILD_DIR}/etc/hostapd ${BUILD_DIR}/usr/local/man/man1 ${BUILD_DIR}/usr/local/man/man8 

# Stage binaries that are not installed by default
cp -v -f wps-ap-nfc.py ${BUILD_DIR}/usr/local/bin
chmod +x ${BUILD_DIR}/usr/local/bin/wps-ap-nfc.py

# Stage all sample configs as .new
for CONFIG_FILE in $(find . -type f -name 'hostapd\.[a-z]*' -maxdepth 1); do
  cp -v -f ${CONFIG_FILE} ${BUILD_DIR}/etc/hostapd/${CONFIG_FILE}.new
done
cp -v -f wired.conf ${BUILD_DIR}/etc/hostapd

# Stage manual pages
gzip -v -c hostapd_cli.1 > ${BUILD_DIR}/usr/local/man/man1/hostapd_cli.1.gz
gzip -v -c hostapd_cli.1 > ${BUILD_DIR}/usr/local/man/man1/hostapd_cli.1.gz

cd ${BUILD_DIR} 
rm -v -r -f ${BUILD_DIR}/src

# Create package
/sbin/makepkg -l y -c n /tmp/${PRGNAM}-${VERSION}-$(uname -m)-${TAG}.txz
rm -v -r -f ${BUILD_DIR}
